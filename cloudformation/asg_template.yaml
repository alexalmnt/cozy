AWSTemplateFormatVersion: '2010-09-09'
Description: Auto Scaling Group CloudFormation Template

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 Instance Type
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id where the autoscaling group will launch instances
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for the auto scaling group to launch instances into
  
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Mylaunchtemplate
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        ImageId: ami-0ebfd941bbafe70c6  #Replace With Your Desired AMI
        SecurityGroupIds: 
          - !Ref MysecurityGroup

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH And HTTP Access
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '1'
      TargetGroupARNs: !Ref MyTargetGroup

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancerV2::TargetGroup
    Properties:
      VpcId: !Ref VPCId
      Port: 80
      Protocol: HTTP
      HealthCheckProtocol: HTTP
      HealthCheckPort: '80'
      HealthCheckPath: /
      TargetType: instance

Outputs:
  AutoScalingGroupName:
    Description: the name of the autoscaling group
    Value: !Ref AutoScalingGroup